
filter { 
    if [type] == "bro-conn" {
        csv {
            columns => ["timestamp","uid","source_ip","source_port","destination_ip","destination_port","protocol","service","duration","original_bytes","respond_bytes","connection_state","local_orig","local_respond","missed_bytes","history","original_packets","original_ipbytes","respond_packets","respond_ipbytes","tunnel_parents","original_country_code","respond_country_code","sensor_name"]
            separator => "	"
        }
        mutate {
            convert => {
                "original_bytes" => "integer"
                "respond_bytes" => "integer"
            }
        }
        translate {
            field => "connection_state"
            destination => "ConnectionStateDescription"
            dictionary => [
                "S0", "Connection attempt seen, no reply",
                "S1", "Connection established, not terminated",
                "S2", "Connection established and close attempt by originator seen (but no reply from responder)",
                "S3", "Connection established and close attempt by responder seen (but no reply from originator)",
                "SF", "Normal SYN/FIN completion",
                "REJ", "Connection attempt rejected",
                "RSTO", "Connection established, originator aborted (sent a RST)",
                "RSTR", "Established, responder aborted",
                "RSTOS0", "Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder",
                "RSTRH", "Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator",
                "SH", "Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open)",
                "SHR", "Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator",
                "OTH", "No SYN seen, just midstream traffic (a 'partial connection' that was not later closed)"
                ]
        }
        geoip {
            source => "destination_ip"
            database => "/usr/share/GeoLite2-Country_20190122/GeoLite2-Country.mmdb"
        }
        if [destination_port] == "5353" {
            drop { }
        }
        if [destination_ip] == "192.168.20.1" and [destination_port] == "53" {
            drop { }
        }
    }
}

output {
    if [type] == "bro-conn" {
        elasticsearch {
            hosts => ["localhost:9200"]
            index => "bro-conn-%{+YYYY.MM.dd}"
        }
    }
}
